#include "backends/p4tools/modules/mutate/options.h"

#include <cstdlib>
#include <iostream>

namespace P4Tools {

MutateOptions &MutateOptions::get() {
    static MutateOptions INSTANCE;
    return INSTANCE;
}

const char *MutateOptions::getIncludePath() {
    P4C_UNIMPLEMENTED("getIncludePath not implemented for P4Mutate.");
}

MutateOptions::MutateOptions() : AbstractP4cToolOptions("P4mutate options.") {
    registerOption(
        "--outputMutated", "file",
        [this](const char *arg) {
            outputMutatedFileName = arg;
            return true;
        },
        "The output file name for the mutated file.");

    registerOption(
        "--outputUnmutated", "file",
        [this](const char *arg) {
            outputUnmutatedFileName = arg;
            return true;
        },
        "The output file name for the unmutated file.");

    registerOption(
        "--compilerBin", "file",
        [this](const char *arg) {
            compiler = arg;
            return true;
        },
        "The path to the p4c compiler binary.");

    registerOption(
        "--ouputFolder", "file",
        [this](const char *arg) {
            outputFolder = arg;
            return true;
        },
        "The path to the folder which will store the p4 program after each mutation pass.");

    registerOption(
        "--emi", "",
        [this](const char *) {
            emi = true;
            return true;
        },
        "The path to the folder which will store the p4 program after each mutation pass.");

    registerOption(
        "--parserOutputFile", "path",
        [this](const char *arg) {
            parserOutputFile = arg;
            return true;
        },
        "The path to the file generated by the model log parser");
}

}  // namespace P4Tools
